import telebot
import paho.mqtt.client as mqtt

TELEGRAM_TOKEN = "7862856391:AAHyVMhgccEw4H45WSrtUF8HlQodFSqB45s"
bot = telebot.TeleBot(TELEGRAM_TOKEN)


MQTT_BROKER = "84.201.174.42"
MQTT_PORT = 1883
MQTT_USER = "gera"
MQTT_PASSWORD = "gera123"


MQTT_TOPIC_TEMP = "test/temp"
MQTT_TOPIC_HUM = "test/hum"
MQTT_TOPIC_BPM = "test/bpm"
MQTT_TOPIC_SPO2 = "test/spo2"


temperature = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
humidity = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
bpm = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
spo2 = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"


def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MQTT –±—Ä–æ–∫–µ—Ä—É")
        client.subscribe([(MQTT_TOPIC_TEMP, 0), (MQTT_TOPIC_HUM, 0), (MQTT_TOPIC_BPM, 0), (MQTT_TOPIC_SPO2, 0)])
    elif rc == 5:
        print("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∫–æ–¥ 5)")
        exit(1)
    else:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MQTT –±—Ä–æ–∫–µ—Ä—É. –ö–æ–¥: {rc}")


def on_message(client, userdata, msg):
    global temperature, humidity, bpm, spo2
    try:
        if msg.topic == MQTT_TOPIC_TEMP:
            temperature = f"{msg.payload.decode('utf-8')} ¬∞C"
        elif msg.topic == MQTT_TOPIC_HUM:
            humidity = f"{msg.payload.decode('utf-8')} %"
        elif msg.topic == MQTT_TOPIC_BPM:
            bpm = f"{msg.payload.decode('utf-8')} BPM"
        elif msg.topic == MQTT_TOPIC_SPO2:
            spo2 = f"{msg.payload.decode('utf-8')} %"
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ MQTT —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


mqtt_client = mqtt.Client()
mqtt_client.username_pw_set(MQTT_USER, MQTT_PASSWORD)
mqtt_client.on_connect = on_connect
mqtt_client.on_message = on_message


try:
    print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MQTT –±—Ä–æ–∫–µ—Ä—É {MQTT_BROKER}:{MQTT_PORT}...")
    mqtt_client.connect(MQTT_BROKER, MQTT_PORT, 60)
    mqtt_client.loop_start()
except Exception as e:
    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±—Ä–æ–∫–µ—Ä—É: {e}")
    exit(1)


@bot.message_handler(commands=['start'])
def start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(telebot.types.KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∞"))
    bot.send_message(
        message.chat.id,
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!\n"
        "–Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∞. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏.",
        reply_markup=markup
    )


@bot.message_handler(func=lambda message: message.text == "–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∞")
def send_climate_data(message):
    global temperature, humidity, bpm, spo2
    bot.send_message(
        message.chat.id,
        f"–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∞:\n"
        f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}\n"
        f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}\n"
        f"–°–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ: {bpm}\n"
        f"–ù–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º: {spo2}"
    )


@bot.message_handler(func=lambda message: True)
def unknown_command(message):
    bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.")


bot.infinity_polling()
